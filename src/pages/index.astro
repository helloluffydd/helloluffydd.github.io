---
import PostCard from '@/components/molecule/PostCard.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { IFrontmatter } from '@/type';
import { blogConfig, selfIntros } from '@/utils/appConfig';
import { MDXInstanceProperty, sortByDate } from '@/utils/helpers';

export interface Props {}

const allArticles = await Astro.glob<IFrontmatter>('./articles/**/*.mdx');
const sortedArticles = sortByDate(allArticles);
---

<BaseLayout>
  <section
    class="mt-8 my-12 flex flex-col-reverse justify-between items-center md:flex-row"
  >
    <div class="leading-loose flex-1 text-center">
      <h2 class="text-2xl mb-4 hidden md:block">{blogConfig.greeting}</h2>
      {selfIntros.map((s) => <p>{s}</p>)}
    </div>
    <div
      class="w-[90%] border-b border-neutral-900 mb-8 dark:border-b md:flex-[0.6] md:mr-12 dark:border-neutral-200"
    >
      <img
        src="myself.png"
        alt=""
        class="w-64 h-72 object-cover object-top mx-auto"
      />
    </div>
    <h2 class="text-2xl mb-8 md:hidden">{blogConfig.greeting}</h2>
  </section>
  {
    sortedArticles.length > 0 && (
      <section>
        <h2 class="text-2xl font-bold mb-6">Latest Posts</h2>
        <ul class="grid grid-cols-1 gap-6 md:grid-cols-3 items-stretch">
          {(sortedArticles as MDXInstanceProperty[])
            .filter((post) => !post.frontmatter.draft)
            .slice(0, 3)
            .map(({ frontmatter, url, coverImgSrc }) => (
              <PostCard
                frontmatter={frontmatter}
                url={url || ''}
                coverImgSrc={coverImgSrc || ''}
              />
            ))}
        </ul>
      </section>
    )
  }
</BaseLayout>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@300;400;500;600;700;900&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap');
</style>
